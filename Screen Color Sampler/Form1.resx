<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOsKAADrCgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJuTXAC/sD0As6hFBMGs
        PRPOrDUj2akuLdykLivVmzIgzZI4D7+JQALEiz0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKCzYQCes2cEpLNWKq60
        S2y4sUOqwK070cmpM+TTpSvs1p8r69KXMOHPkDXJzIo7nceDQFvCfkYat4FmAb6AUwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJfAcQCc060Ak7piKZm4
        WZKfs1HloKlG/p6bO/+fkTL/o4oq/6uGI/+tgSP/q3sn/614Lf+0eDT/vHk7+8B3QtS9c0l2unFSGLVi
        OADHkXoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACFwXMAhsN6B4W9
        aGKKul/cjK9V/4ifSP+JlT//kJE5/5qPMv+mjSz/sosl/7SFJP+tfCj/qHMs/6NrMP+iZzX/qWc8/7Rp
        Rf22Z03FtGVUQrhzewG2a2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAd8N7AHnF
        gAx3v3CIe7xo9XywXP97n1T/fZNQ/4mZQ/+ZnT//pJs4/7GZMP++lSj/wI4n/7mDLP+zeTH/rXE1/6hp
        Of+jYTz/o11B/6xdSv+vXFHnrVpZYLJodwOwYWYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGzH
        hgBuyo0JaMJ5i2y/cftwt2j/erBn/5mwif+GkHj/fIhU/4uTPf+PijP/p5Eu/8edKv/JlCn/wYgv/7p9
        NP+0czn/rmo9/6liQf+kWkX/oVVJ/6dTUf+nUFfvpk9eYM2o8QCsXXAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABpzZYA////AFrFhG1cwnv4Yr91/2W0af+fzJv/ztTL/5GaiP94f2n/en9Y/3x7V/99cDH/qoYj/8yW
        Kv/HizL/vn44/7dzPf+xaUL/q2BG/6ZYSv+hUU3/oExS/6JIWf+fQ13mn0VmQps9WwCyaogAAAAAAAAA
        AAAAAAAA0/DeAEnHiwBOyZE2S8WH5FHDgf9Yv3v/Xrlx/3vCgf/K38n/vMC4/4KJeP+GjHX/goNz/314
        X/+EbSv/nXIg/72DMf/BfTv/uHFB/7FmRv+rXEv/plRP/6BMU/+dRVb/nUBc/5o6YP+YOGTCmj9xFpo9
        bgAAAAAAAAAAAAAAAABT0KIAW9OqBkLJk6RAxo3/RsWI/03Cgv9Vvnv/Xbxz/3zDgv/E1sL/yMzD/6y0
        m/+Wmnz/g4Jv/4R6Xf+HZyz/il0k/6hqN/+2bET/sGFL/6lWUP+jTVT/nkVY/5k9XP+XN2D/lDJk/48u
        af2OMnJxgw9NAJ5YkgAAAAAAAAAAAEHNnwBFzqE5Pcua7TzJlf8+yJD/QcWL/0jChP9SwH7/ZMF9/7na
        vP/l7OT/2d3S/7G2mv+cm3r/iIJt/4V3X/+DXTP/e0sq/5BRO/+mVk3/pU5V/55EWv+ZO17/lDRi/5Au
        Z/+KK23/hSlz/4Iqec6GN4cXhTaGAAAAAAAAAAAABb+CAD7QpoY6zqH/Osye/zvLmv88yZX/P8aP/0TE
        if9Rw4T/kc2m/8jdyf/n7+X/2t7S/7a2mP+lm3b/ioBt/4JyYv99UTz/cToy/3o6P/+QPVP/lzhg/5Ew
        Zf+LLGz/hClz/38nef96Jn7/diWD+Xgsi1N1JYUAyKjOAAAAAABL17YPOtKswjfQqP84z6b/Oc6j/zrN
        oP87y5v/PMmW/z/Hjv9OxYr/j86o/8rgy//p8eb/3t7R/8C2lP+plnb/iHpw/39rZv90QUb/Zyk9/2gk
        Rv93Jlv/gShy/30nfP93JYH/cySG/28iiv9sIo3/bSaSkw4AJQCKVK4AAAAAAEDWtyw21LLkNdOw/zbS
        r/820q3/N9Gq/zjQp/85zqP/Osye/zzKlv9HyJH/is+r/8rhy//r8ub/49/P/8Gulv+hiH7/g3N0/3pi
        a/9oL1P/VxpP/1QaWP9bHGn/aCCC/2ohj/9nIJP/ZB+V/2IemP9iIZvAcDeoC3A3pwAAAAAAPNi9RzTW
        ufMz1rj/M9W3/zTVtv801LT/NdSz/zXTsP820q3/N9Cp/zjOov9BzJz/htGx/8vhy//w8uP/5drR/7ed
        oP+Vd4n/fGx8/3Jddf9WKGn/RhVm/0UVa/9IFnT/UxqL/1ocnf9aHKH/WBui/1kdpdliKqsZYiqrAAAA
        AAA728RZMtnA+THZwP8x2MD/Mdi//zHYv/8y2L7/Mti9/zLXvP8y17v/M9a5/zPVtf871LP/gNfC/83f
        zf/u5en/3M7d/6aQtP+FcJv/dWqF/2tbfv9IJHv/ORF3/zoSev87En//QhWP/0wXpv9OGK3/Sxmk5FIm
        oSNSJaIAAAAAADrdylsw28j5L9vI/y/cyP8v3Mn/L9zJ/y7cyv8u3Mv/Lt3M/y7dzf8t3s//Ld/T/yri
        2f8v4+b/etLo/7e66//d2vv/08vt/5qMyf97ban/cGiK/2ZZhP8+IYn/Lg2G/zEPiP8yD4r/NhGT/zwT
        ov86FJbkRSOZI0UjmgAAAAAAOeDRSi7ez/Qt3tD/Ld/R/yzf0v8s39P/K+DV/yvh2P8r4tv/LOTg/yrm
        5v8o6e//KOj4/yzb/P87v/v/eKbv/7C28v/a2/7/z8v3/5SM2/92bLb/bWeP/2JYif82H5X/JguS/ykN
        lP8rDZX/LQ6X/zERmdtAIqEaQSKhAAAAAAA64tguLeHX5ivh2P8q4tn/KuLb/ynj3v8o5OH/LObm/y7p
        6/8t6/L/LOz4/y3n/P8x3fz/N9D7/z25+/86jPz/dZTv/7K58v/b3f//zcv9/5KN6/90bsT/bGiT/19Y
        jv8vHZ//Hwme/yMMmP8lDJz/KxCjw0QrqwxEK6wAAAAAAEPl3xEt497GKeTf/yjl4v8n5uX/Jufo/yzp
        7f807PP/M+34/zTr+/825vz/Od/8/z3W/P9Cy/v/R7v7/z+W/P84dPz/d5Hw/7W88v/c3///zc3//5OR
        9/91cdP/a2iZ/1xWk/8qHZD/IRtI/yIYXv8nFJ2XAAAAAFtHxAAAAAAAANzkAC7m5osn5+f/Jujq/yTp
        7v8n6/P/Ou74/z7u+/8/6/z/Qeb8/0Ph/P9G2/z/SdP8/03K/P9Rvfz/TKL8/0GD/f8/b/3/fZPw/7i/
        8v/f4f//z9D//5eX/f92dN7/VlWB/zIxPv8nJyn/KCcs/zIvQqOWlo4EcXFxAAAAAAAs6e0AMuntPibp
        7/Aj6/P/Iuz3/zDu+/9M7v3/Tev9/07n/f9Q4/3/Ut79/1XZ/P9X0/z/Wsv8/17B/P9ZrP3/UZT9/0p/
        /f9Kc/3/hJjw/7zD8v/h5P//0tT//35+x/84N07/Li0v/y8uMf8vLjH/Ozs9noyMjgZ7enwAAAAAAELt
        9ABL7fMIKO33qyLt+v8h6/z/POv8/17s/f9e6f3/YOb9/2Hi/f9j3v3/Zdn8/2fU/P9qzvz/bMb8/2m2
        /P9io/3/XZL9/1eD/v9Ye/3/jp/w/8DH8v+ztcn/UVFY/zY2N/84Nzn/NzY4/zIxNPc6OTxbEA8SAFlY
        WwAAAAAAhPb+ACjs/AAx7vw9Jer86CPn/P8/5/z/cOv9/3Hp/f9z5v3/dOP9/3Xf/f933Pz/edf8/3vT
        /P99zfz/esD8/3Ww/f9xo/3/bZj+/2mN/v9rif//g4/L/1dXX/9FREX/RkZI/0VERv84Nzn/LSwv/y8u
        Md46OTxHAAAAAFhYWgAAAAAATe38AJf+/QEu5/x4JuP8+jPi/P956v3/h+r9/4fo/f+I5f3/ieL9/4vf
        /f+M3P3/jtj9/4/U/f+Nyv3/ib79/4a0/f+Dq/7/gaP//3WO5f9cYXr/XVxc/19fYP9bWlz/Q0NE/zQ0
        Nv8zMzX/MzM1/zY1ON8/P0FEJiYoAAAAAAAAAAAAP+b8AEbo/Awv4fyYKN38/Vri/f+b7P7/n+v+/5/p
        /f+g5/3/oeT9/6Li/f+j3/3/pNz9/6PU/f+gzP7/ncT+/5u9/v+auP//h5zW/3V3e/+JiIf/f39+/1VU
        Vv9AQEL/Pz9B/z8/Qf8/P0H/Pz9B/0BAQspKSkwbAAAAAAAAAAAAAAAAPeD8AEfi/BEx2/yVMNj8+W/h
        /f+x7v7/uu7+/7js/v+56v7/uen+/7rn/v+75f7/uuD+/7ja/v+21P7/tc/+/7TL/v+zx/z/i5nE/4eN
        n/9ga53rRUlf01JSUv5UVFX/VFNV/1RTVf9UU1X/UFBR8EpKS0AAAAAAAAAAAAAAAAAAAAAAQtz8AE3f
        /As11/xxMtP85GHa/P+r6v3/z/L+/9bz/v/W8v7/1fD+/9Xv/v/V7P7/1On+/9Tm/v/T5P7/x9n+/5W0
        /v9DdPv+LFbe0S9S205YW2wkYGBgunJycv93d3j/dnZ3/3d2d/9mZmbZVVVWJQAAAAAAAAAAAAAAAAAA
        AAAAAAAAVdr8AHTk/gE90/wzM837n0HN++ps1fz/nuH9/8Lr/v/V8P7/3PH+/9vv/v/Q5/7/udf+/466
        /f9Xkf39Lm/93iZh/YYyZv8hETn7AF5fZABlZWYie3t7uJubm/6joqP/jIyM7GxsbGE7PUQAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAErQ+wBY1fwFPMr7MjbE+3o5wfu3RcD721LA/OxavvzzV7T88kyl
        /Ok8k/zUL4L8qit3/Gg2d/0ja5X+AlWJ/QAAAAAAp6enAG1tbQBvbm8Zg4ODaImJiX15eXlAY2NjA21t
        bgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACe4f0A////AFfJ/AdFv/sbQbr7Lj6z
        +zo9qfs4PZ/7KkGY/BZZn/wEL4n8ANbo/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////gH///AAP//gAB//gAAH/wAAA/4AAAP+AAAB/AAAAPgAAAD4AA
        AAeAAAAHAAAABwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAeAAAADgAAAA4AAAAfAAAADwAAAAeAA
        AADwAAAA+AAAAPwAAYH/AAPB/+Af//////8=
</value>
  </data>
</root>